import lingo/pegcode/driver;
import string;

ArExpr ::= ArSum, ArMult, ArInt;

ArSum(lhs : ArExpr, rhs : ArExpr);
ArMult(lhs : ArExpr, rhs : ArExpr);
ArInt(val : int);

ar2s(e: ArExpr) -> string {
    switch (e) {
        ArSum(lhs, rhs): "(" + ar2s(lhs) + "+" + ar2s(rhs) + ")";
        ArMult(lhs, rhs): "(" + ar2s(lhs) + "*" + ar2s(rhs) + ")";
        ArInt(val): i2s(val);
    }
}

ar2i(e: ArExpr) -> int {
    switch (e) {
        ArSum(lhs, rhs): ar2i(lhs) + ar2i(rhs);
        ArMult(lhs, rhs): ar2i(lhs) * ar2i(rhs);
        ArInt(val): val;
    }
}

s2ar(str : string) -> ArExpr {
    e_gr = "#include ../lingo/arith.lingo";
    parsic(
        compilePegGrammar("#include ../lingo/arith.lingo"),
        str,
        defaultPegActions
    );
}

main() {
    str = "((1 * 2) + (5+6))";

    ex = s2ar(str);
    println(ex);

    println("parsed AST: " + ar2s(ex));

    println("result: " + i2s(ar2i(ex)));
}